# .github/actions/retry-artifact-operation/action.yml (FIXED Download Logic)
name: 'Retryable Artifact Operation (Fixed Attempts)'
description: 'Uploads or downloads artifacts with a fixed number of retries.'

inputs:
  operation_type:
    description: 'Specify "upload" or "download".'
    required: true
    type: string
  name:
    description: 'Artifact name. For download, omit to get all artifacts in the workflow run.'
    required: false
    type: string
  path:
    description: 'Paths for operation.'
    required: true
    type: string
  if_no_files_found:
    description: 'For upload: warn, error, ignore.'
    required: false
    default: 'warn'
    type: string
  overwrite:
    description: 'For upload: true/false.'
    required: false
    default: 'true'
    type: boolean

runs:
  using: "composite"
  steps:
    # --- ATTEMPT 1 ---
    # Upload Logic for Attempt 1
    - name: Attempt 1 - Upload Artifact
      id: upload_attempt_1 # Unique ID for this step
      if: ${{ inputs.operation_type == 'upload' }} # Only run if operation_type is upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.name }}
        path: ${{ inputs.path }}
        if-no-files-found: ${{ inputs.if_no_files_found }}
        overwrite: ${{ inputs.overwrite }}
      continue-on-error: true # Allow this specific step to fail without failing the job immediately

    # Download Logic for Attempt 1 (Specific Name)
    - name: Attempt 1 - Download Specific Artifact
      id: download_attempt_1_specific # Unique ID for this step
      if: ${{ inputs.operation_type == 'download' && inputs.name != '' }} # Run if download AND name is provided
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.name }}
        path: ${{ inputs.path }}
      continue-on-error: true # Allow this specific step to fail without failing the job immediately

    # Download Logic for Attempt 1 (Download All)
    - name: Attempt 1 - Download All Artifacts
      id: download_attempt_1_all # Unique ID for this step
      if: ${{ inputs.operation_type == 'download' && inputs.name == '' }} # Run if download AND name is empty
      uses: actions/download-artifact@v4
      with:
        # No 'name' input here to trigger download all
        path: ${{ inputs.path }}
      continue-on-error: true # Allow this specific step to fail without failing the job immediately

    # --- ATTEMPT 2 ---
    # Delay for Attempt 2
    # We need to check if EITHER specific or all download failed for previous attempt
    - name: Delay for Attempt 2
      if: ${{ (inputs.operation_type == 'upload' && steps.upload_attempt_1.outcome == 'failure') || \
              (inputs.operation_type == 'download' && \
                ((inputs.name != '' && steps.download_attempt_1_specific.outcome == 'failure') || \
                 (inputs.name == '' && steps.download_attempt_1_all.outcome == 'failure'))) }}
      run: |
        echo "Previous attempt failed. Retrying in 10 seconds..." >&2
        sleep 10
      shell: bash

    # Upload Logic for Attempt 2
    - name: Attempt 2 - Upload Artifact
      id: upload_attempt_2
      if: ${{ inputs.operation_type == 'upload' && steps.upload_attempt_1.outcome == 'failure' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.name }}
        path: ${{ inputs.path }}
        if-no-files-found: ${{ inputs.if_no_files_found }}
        overwrite: ${{ inputs.overwrite }}
      continue-on-error: true

    # Download Logic for Attempt 2 (Specific Name)
    - name: Attempt 2 - Download Specific Artifact
      id: download_attempt_2_specific
      if: ${{ inputs.operation_type == 'download' && inputs.name != '' && steps.download_attempt_1_specific.outcome == 'failure' }}
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.name }}
        path: ${{ inputs.path }}
      continue-on-error: true

    # Download Logic for Attempt 2 (Download All)
    - name: Attempt 2 - Download All Artifacts
      id: download_attempt_2_all
      if: ${{ inputs.operation_type == 'download' && inputs.name == '' && steps.download_attempt_1_all.outcome == 'failure' }}
      uses: actions/download-artifact@v4
      with:
        path: ${{ inputs.path }}
      continue-on-error: true

    # --- ATTEMPT 3 ---
    # Delay for Attempt 3
    - name: Delay for Attempt 3
      if: ${{ (inputs.operation_type == 'upload' && steps.upload_attempt_2.outcome == 'failure') || \
              (inputs.operation_type == 'download' && \
                ((inputs.name != '' && steps.download_attempt_2_specific.outcome == 'failure') || \
                 (inputs.name == '' && steps.download_attempt_2_all.outcome == 'failure'))) }}
      run: |
        echo "Previous attempt failed. Retrying in 10 seconds..." >&2
        sleep 10
      shell: bash

    # Upload Logic for Attempt 3
    - name: Attempt 3 - Upload Artifact
      id: upload_attempt_3
      if: ${{ inputs.operation_type == 'upload' && steps.upload_attempt_2.outcome == 'failure' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.name }}
        path: ${{ inputs.path }}
        if-no-files-found: ${{ inputs.if_no_files_found }}
        overwrite: ${{ inputs.overwrite }}
      continue-on-error: true

    # Download Logic for Attempt 3 (Specific Name)
    - name: Attempt 3 - Download Specific Artifact
      id: download_attempt_3_specific
      if: ${{ inputs.operation_type == 'download' && inputs.name != '' && steps.download_attempt_2_specific.outcome == 'failure' }}
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.name }}
        path: ${{ inputs.path }}
      continue-on-error: true

    # Download Logic for Attempt 3 (Download All)
    - name: Attempt 3 - Download All Artifacts
      id: download_attempt_3_all
      if: ${{ inputs.operation_type == 'download' && inputs.name == '' && steps.download_attempt_2_all.outcome == 'failure' }}
      uses: actions/download-artifact@v4
      with:
        path: ${{ inputs.path }}
      continue-on-error: true

    # --- FINAL STATUS CHECK ---
    # This step will fail the composite action if all attempts for the chosen operation failed
    - name: Final Check on Operation Status
      run: |
        if [ "${{ inputs.operation_type }}" == "upload" ]; then
          # Check if the last upload attempt also failed
          if [ "${{ steps.upload_attempt_1.outcome }}" == "failure" ] && \
             [ "${{ steps.upload_attempt_2.outcome }}" == "failure" ] && \
             [ "${{ steps.upload_attempt_3.outcome }}" == "failure" ]; then
            echo "::error::Artifact upload failed after all 3 attempts." >&2
            exit 1
          fi
        elif [ "${{ inputs.operation_type }}" == "download" ]; then
          # Determine which download path was taken
          DOWNLOAD_FAILED="false"
          if [ "${{ inputs.name }}" != "" ]; then # Specific download path
            if [ "${{ steps.download_attempt_1_specific.outcome }}" == "failure" ] && \
               [ "${{ steps.download_attempt_2_specific.outcome }}" == "failure" ] && \
               [ "${{ steps.download_attempt_3_specific.outcome }}" == "failure" ]; then
              DOWNLOAD_FAILED="true"
            fi
          else # Download all path
            if [ "${{ steps.download_attempt_1_all.outcome }}" == "failure" ] && \
               [ "${{ steps.download_attempt_2_all.outcome }}" == "failure" ] && \
               [ "${{ steps.download_attempt_3_all.outcome }}" == "failure" ]; then
              DOWNLOAD_FAILED="true"
            fi
          fi

          if [ "$DOWNLOAD_FAILED" == "true" ]; then
            echo "::error::Artifact download failed after all 3 attempts." >&2
            exit 1
          fi
        else
          echo "::error::Invalid operation_type specified. Must be 'upload' or 'download'." >&2
          exit 1
        fi
      shell: bash